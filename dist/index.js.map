{"version":3,"sources":["../src/index.js"],"names":["app","PORT","process","env","use","express","json","database","entries","title","message","users","firstname","lastname","email","password","post","req","res","body","status","push","console","log","user","filter","u","length","put","error","params","id","get","listen"],"mappings":";;AAAA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAGCD,IAAII,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;;AAGD,IAAMC,WAAW;;AAEfC,UAAS,CAAC;AACRC,SAAO,SADC,EACUC,SAAS;AADnB,EAAD,CAFM;;AAMfC,QAAO,CAAC;AACNC,aAAW,OADL,EACcC,UAAU,MADxB,EACgCC,OAAO,OADvC,EACgDC,UAAU;AAD1D,EAAD;;AANQ,CAAjB;;AAaAf,IAAIgB,IAAJ,CAAS,iBAAT,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAa;AAAA,iBAEbD,IAAIE,IAFS;AAAA,KAEhCV,KAFgC,aAEhCA,KAFgC;AAAA,KAEzBC,OAFyB,aAEzBA,OAFyB;;AAGxC,KAAID,UAAU,GAAV,IAAiBC,YAAY,GAAjC,EAAuC;AACtCQ,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,oBAArB;AACA,EAFD,MAGM,IAAIG,SAASC,OAAb,EAAsB;AAC3BH,WAASC,OAAT,CAAiBa,IAAjB,CAAsBJ,IAAIE,IAA1B;AACAD,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqBC,SAASC,OAA9B;AACA,EAHK,MAID;AACJU,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,aAArB;AACA;AAED,CAdD;;AAkBAN,IAAIgB,IAAJ,CAAS,gBAAT,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAa;AACvCI,SAAQC,GAAR,CAAYN,IAAIE,IAAhB;AADuC,kBAEUF,IAAIE,IAFd;AAAA,KAE/BP,SAF+B,cAE/BA,SAF+B;AAAA,KAEpBC,QAFoB,cAEpBA,QAFoB;AAAA,KAEVC,KAFU,cAEVA,KAFU;AAAA,KAEHC,QAFG,cAEHA,QAFG;;AAGvC,KAAIH,cAAc,GAAd,IAAqBC,aAAa,GAAlC,IAAyCC,UAAU,GAAnD,IAA0DC,aAAa,GAA3E,EAAgF;AAC/EG,MAAIZ,IAAJ,CAAS,oBAAT,EAA+Bc,MAA/B,CAAsC,GAAtC;AACA,EAFD,MAEO,IAAIR,aAAaC,QAAb,IAAyBC,KAAzB,IAAkCC,QAAtC,EAAgD;AACtD,MAAMS,OAAOjB,SAASI,KAAT,CAAec,MAAf,CAAsB;AAAA,UAAKC,EAAEZ,KAAF,KAAYA,KAAZ,IAAqBY,EAAEX,QAAF,KAAeA,QAAzC;AAAA,GAAtB,CAAb;AACA,MAAIS,KAAKG,MAAL,GAAc,CAAd,IAAmBH,KAAK,CAAL,EAAQV,KAA/B,EAAsC;AACrCI,OAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,mCAArB;AACA,GAFD,MAEO;AACNC,YAASI,KAAT,CAAeU,IAAf,CAAoBJ,IAAIE,IAAxB;AACAD,OAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqBC,SAASI,KAA9B;AACA;AACD,EARM,MAQA;AACNO,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,aAArB;AACA;AAED,CAjBD;;AAmBAN,IAAIgB,IAAJ,CAAS,gBAAT,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAY;AACtC,KAAID,IAAIE,IAAJ,CAASL,KAAT,KAAmB,GAAnB,IAA0BG,IAAIE,IAAJ,CAASJ,QAAT,KAAsB,GAApD,EAAwD;AACvDG,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,oBAArB;AACA,EAFD,MAGK,IAAIW,IAAIE,IAAJ,CAASL,KAAT,IAAkBG,IAAIE,IAAJ,CAASJ,QAA/B,EAAwC;AAC5CG,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,mBAArB;AACA,EAFI,MAEE;AACNY,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,aAArB;AACA;AACD,CATD;;AAYAN,IAAI4B,GAAJ,CAAQ,qBAAR,EAA+B,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC5C,KAAID,IAAIE,IAAJ,CAASV,KAAT,KAAmB,GAAnB,IAA0BQ,IAAIE,IAAJ,CAAST,OAAT,KAAqB,GAAnD,EAAwD;AACvDQ,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,EAAEuB,OAAO,yBAAT,EAArB;AACA,EAFD,MAEO,IAAI,CAACtB,SAASC,OAAT,CAAiBS,IAAIa,MAAJ,CAAWC,EAA5B,CAAL,EAAsC;AAC5Cb,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,+BAArB;AACA,EAFM,MAEA,IAAIW,IAAIE,IAAJ,CAASV,KAAT,IAAkBQ,IAAIE,IAAJ,CAAST,OAA/B,EAAwC;AAC9CH,WAASC,OAAT,CAAiBS,IAAIa,MAAJ,CAAWC,EAA5B,EAAgCtB,KAAhC,GAAwCQ,IAAIE,IAAJ,CAASV,KAAjD;AACAF,WAASC,OAAT,CAAiBS,IAAIa,MAAJ,CAAWC,EAA5B,EAAgCrB,OAAhC,GAA0CO,IAAIE,IAAJ,CAAST,OAAnD;AACAQ,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,EAAEI,SAAS,yBAAX,EAArB;AACA,EAJM,MAIA;AACNQ,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,EAAEuB,OAAO,kBAAT,EAArB;AACA;AACD,CAZD;;AAcA7B,IAAIgC,GAAJ,CAAQ,iBAAR,EAA2B,UAACf,GAAD,EAAMC,GAAN,EAAc;AACvC,KAAIX,SAASC,OAAb,EAAsB;AACtBU,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqBC,SAASC,OAA9B;AACA,EAFA,MAEM;AACNU,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,EAAEuB,OAAO,cAAT,EAArB;AACA;AACD,CAND;;AAQA7B,IAAIgC,GAAJ,CAAQ,qBAAR,EAA+B,UAACf,GAAD,EAAMC,GAAN,EAAc;AAC3C,KAAI,CAACX,SAASC,OAAT,CAAiBS,IAAIa,MAAJ,CAAWC,EAA5B,CAAL,EAAsC;AACtCb,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,gBAArB;AACA,EAFA,MAEM,IAAIC,SAASC,OAAT,CAAiBS,IAAIa,MAAJ,CAAWC,EAA5B,CAAJ,EAAqC;AAC3Cb,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqBC,SAASC,OAAT,CAAiBS,IAAIa,MAAJ,CAAWC,EAA5B,CAArB;AACA,EAFM,MAEA;AACNb,MAAIE,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB,EAAEuB,OAAO,cAAT,EAArB;AACA;AACD,CARD;;AAUA7B,IAAIiC,MAAJ,CAAWhC,IAAX,EAAiB;AAAA,QAAMqB,QAAQC,GAAR,mBAA6BtB,IAA7B,CAAN;AAAA,CAAjB","file":"index.js","sourcesContent":["import express from 'express';\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n\n app.use(express.json());\n\n\nconst database = {\n\n\t\tentries: [{\n\t\t\t\ttitle: \"heading\", message: \"message\"\n\t\t}],\n\n\t\tusers: [{\n\t\t\t\tfirstname: \"first\", lastname: \"last\", email: \"email\", password: \"password\"\n\t\t}],\n\n};\n\n\napp.post('/api/v1/entries', (req, res) =>{\n\t\n\tconst { title, message } = req.body;\n\tif (title === ' ' || message === ' ' ) {\n\t\tres.status(422).json('Please fill fields');\n\t} \n\t else if (title && message) {\n\t\tdatabase.entries.push(req.body);\n\t\tres.status(201).json(database.entries);\n\t} \n\telse {\n\t\tres.status(400).json('Bad Request');\n\t}\n\t\n});\n\n\n\napp.post('/api/v1/signup', (req, res) =>{\n\tconsole.log(req.body);\n\tconst { firstname, lastname, email, password } = req.body;\n\tif (firstname === ' ' || lastname === ' ' || email === ' ' || password === ' ') {\n\t\tres.json('Please fill fields').status(422);\n\t} else if (firstname && lastname && email && password) {\n\t\tconst user = database.users.filter(u => u.email === email && u.password === password);\n\t\tif (user.length > 0 && user[0].email) {\n\t\t\tres.status(409).json('Email and password already taken!');\n\t\t} else {\n\t\t\tdatabase.users.push(req.body);\n\t\t\tres.status(201).json(database.users);\n\t\t}\t\n\t} else {\n\t\tres.status(400).json('Bad Request');\n\t}\n\t\n});\n\napp.post('/api/v1/signin', (req, res)=>{\n\tif (req.body.email === \" \" || req.body.password === \" \"){\n\t\tres.status(422).json('Please fill fields');\n\t}\n\telse if (req.body.email && req.body.password){\n\t\tres.status(200).json('You are signed in');\n\t} else {\n\t\tres.status(400).json('Bad Request');\n\t}\n});\n\n\napp.put('/api/v1/entries/:id', (req, res) => {\n\tif (req.body.title === ' ' || req.body.message === ' ') {\n\t\tres.status(422).json({ error: 'Please fill the fields!' });\n\t} else if (!database.entries[req.params.id]) {\n\t\tres.status(404).json('No entry found to be modified');\n\t} else if (req.body.title && req.body.message) {\n\t\tdatabase.entries[req.params.id].title = req.body.title;\n\t\tdatabase.entries[req.params.id].message = req.body.message;\n\t\tres.status(200).json({ message: 'Entry has been updated!' });\n\t} else {\n\t\tres.status(400).json({ error: 'Invalid request!' });\n\t}\n});\n\napp.get('/api/v1/entries', (req, res) => {\n\t if (database.entries) {\n\t\tres.status(200).json(database.entries);\n\t} else {\n\t\tres.status(400).json({ error: 'Bad request!' });\n\t}\n});\n\napp.get('/api/v1/entries/:id', (req, res) => {\n\t if (!database.entries[req.params.id]) {\n\t\tres.status(404).json('No entry found');\n\t} else if (database.entries[req.params.id]) {\n\t\tres.status(200).json(database.entries[req.params.id]);\n\t} else {\n\t\tres.status(400).json({ error: 'Bad request!' });\n\t}\n});\n\napp.listen(PORT, () => console.log(`Listening on ${ PORT }`));"]}